#!/usr/bin/env python
import dbus
import sys
import socket
import struct
import os

if len(sys.argv) != 2 or (sys.argv[1] != "interface" and sys.argv[1] != "ip") :
    print "Usage: %s ip"%sys.argv[0]
    print "       %s interface"%sys.argv[0]
    sys.exit(0)

command = sys.argv[1]

# Check if autoconfig is disabled
if command == "ip":
    if os.environ.has_key('ROS_IP'):
        print os.environ['ROS_IP']
        sys.exit(0)

if command == "interface":
    if os.environ.has_key('ROS_INTERFACE'):
        print os.environ['ROS_INTERFACE']
        sys.exit(0)

try:
    bus = dbus.SystemBus()
    nm_proxy = bus.get_object("org.freedesktop.NetworkManager", "/org/freedesktop/NetworkManager")
    nm_props = dbus.Interface(nm_proxy, "org.freedesktop.DBus.Properties")
    active = nm_props.Get("org.freedesktop.NetworkManager", "ActiveConnections")
except dbus.exceptions.DBusException as e:
    if command == "interface":
        print "lo"
    if command == "ip":
        print "127.0.0.1"
    sys.exit(1)


for conn in active:
    conn_proxy = bus.get_object("org.freedesktop.NetworkManager", conn)
    conn_props = dbus.Interface(conn_proxy, "org.freedesktop.DBus.Properties")

    # Check if the current connection is the default
    default = conn_props.Get("org.freedesktop.NetworkManager.Connection.Active", "Default")
    if default == 1:
        dev_path = conn_props.Get("org.freedesktop.NetworkManager.Connection.Active", "Devices")[0]
        dev_proxy = bus.get_object("org.freedesktop.NetworkManager", dev_path)
        dev_props = dbus.Interface(dev_proxy, "org.freedesktop.DBus.Properties")
        if command == "interface":
            print dev_props.Get("org.freedesktop.NetworkManager.Device", "Interface")
            sys.exit(0)

        if command == "ip":
            ip4_path = dev_props.Get("org.freedesktop.NetworkManager.Device", "Ip4Config")
            ip4_proxy = bus.get_object("org.freedesktop.NetworkManager", ip4_path)
            ip4_props = dbus.Interface(ip4_proxy, "org.freedesktop.DBus.Properties")
            ip4_iaddress = ip4_props.Get("org.freedesktop.NetworkManager.IP4Config", "Addresses")[0][0]
            ip4_paddress = struct.pack('!I',socket.htonl(ip4_iaddress))
            print socket.inet_ntoa(ip4_paddress)
            sys.exit(0)
    
if command == "interface":
    print "lo"
if command == "ip":
    print "127.0.0.1"
